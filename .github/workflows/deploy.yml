name: CI/CD - OpeMay Backend (Gradle + Docker + AWS EC2)

on:
  push:
    branches: [ master ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Grant permission for Gradle wrapper
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean build -x test

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: canarvaezis/seminario_asiaticas_opemay_backend:latest

      - name: Deploy to AWS EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "ðŸš€ Desplegando nueva versiÃ³n en EC2..."

            # Descargar Ãºltima imagen
            docker pull canarvaezis/seminario_asiaticas_opemay_backend:latest

            # Detener y eliminar contenedor previo si existe
            docker stop seminario_backend || true
            docker rm seminario_backend || true

            # Limpiar imÃ¡genes viejas
            docker image prune -f

            # Ejecutar nuevo contenedor con las variables y volumen necesarios
            docker run -d \
              --name seminario_backend \
              --restart always \
              -e FIREBASE_KEY_PATH=/home/ec2-user/secrets/firebase-key.json \
              -v /home/ec2-user/secrets/firebase-key.json:/home/ec2-user/secrets/firebase-key.json \
              -p 80:8080 \
              canarvaezis/seminario_asiaticas_opemay_backend:latest
